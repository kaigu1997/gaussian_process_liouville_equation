# This format file is based on clang-format 14
# and may not work for previous versions where key/value changes.
BasedOnStyle: Microsoft
---
Language: Cpp
AccessModifierOffset: -4
AlignAfterOpenBracket: DontAlign
AlignArrayOfStructures: Right
AlignConsecutiveAssignments: None
AlignConsecutiveBitFields: None
AlignConsecutiveDeclarations: None
AlignConsecutiveMacros: None
AlignEscapedNewlines: Left
AlignOperands: DontAlign
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: None
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
# AttributeMacros
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: After
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: true
# AfterObjCDeclaration
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: true
  BeforeWhile: true
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
# BreakAfterJavaFieldAnnotations
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: true
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: false
ColumnLimit: 0
# CommentPragmas
CompactNamespaces: false
# ConstructorInitializerAllOnOneLineOrOnePerLine
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DeriveLineEnding: false
DerivePointerAlignment: false
DisableFormat: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
# ExperimentalAutoDetectBinPacking
FixNamespaceComments: true
ForEachMacros: ['foreach', 'BOOST_FOREACH']
# IfMacros
IncludeBlocks: Regroup
IncludeCategories:
  - Regex: '"stdafx.h"' # precompiled header
    Priority: -1
  - Regex: '<[[:alnum:]_]+>' # c++ std headers, std c headers are generally here
    Priority: 1
  - Regex: '^<[[:alnum:]_]+(/|[.]h[hpx+])' # most of the third-party libraries: boost, gsl, Eigen, nlopt, ...
    Priority: 2
  - Regex: '^"[[:alnum:]_]+(/|[.]h[hpx+])' # current folder
    Priority: 3
IncludeIsMainRegex: '$'
IncludeIsMainSourceRegex: '([.]h[hpx+])?$'
IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: AfterExternBlock
IndentGotoLabels: true
IndentPPDirectives: None
IndentWidth: 4
IndentWrappedFunctionNames: true
# InsertTrailingCommas
# JavaImportGroups
# JavaScriptQuotes
# JavaScriptWrapImports
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature
# MacroBlockBegin
# MacroBlockEnd
MaxEmptyLinesToKeep: 2
NamespaceIndentation: All
# NamespaceMacros
# ObjCBinPackProtocolList
# ObjCBlockIndentWidth
# ObjCSpaceAfterProperty
# ObjCSpaceBeforeProtocolList
PPIndentWidth: 0
PackConstructorInitializers: NextLine
# PenaltyBreakAssignment
# PenaltyBreakBeforeFirstCallParameter
# PenaltyBreakComment
# PenaltyBreakFirstLessLess
# PenaltyBreakString
# PenaltyBreakTemplateDeclaration
# PenaltyIndentedWhitespace
# PenaltyExcessCharacter
# PenaltyReturnTypeOnItsOwnLine
PointerAlignment: Left
QualifierAlignment: Custom
QualifierOrder: ['static', 'inline', 'constexpr', 'const', 'volatile', 'type', 'restrict']
# RawStringFormats
ReferenceAlignment: Left
ReflowComments: false
RemoveBracesLLVM: false
SeparateDefinitionBlocks: Leave
ShortNamespaceLines: 0
SortIncludes: CaseInsensitive
# SortJavaStaticImport
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Both
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: false
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros: false
  BeforeNonEmptyParentheses: false
  AfterOverloadedOperator: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Maximum: -1
  Minimum: 1
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: c++20
# StatementAttributeLikeMacros
# StatementMacros
TabWidth: 4
# TypenameMacros
UseCRLF: false
UseTab: Always
WhitespaceSensitiveMacros:
  - STRINGIZE
  - BOOST_PP_STRINGIZE
